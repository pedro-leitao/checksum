// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: checksum.proto

package api

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid    string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Payload string `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checksum_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_checksum_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_checksum_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Request) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid    string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Payload string `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Valid   bool   `protobuf:"varint,3,opt,name=valid,proto3" json:"valid,omitempty"`
	Error   string `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checksum_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_checksum_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_checksum_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Response) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *Response) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *Response) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_checksum_proto protoreflect.FileDescriptor

var file_checksum_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x61, 0x70, 0x69, 0x22, 0x37, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x64,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x32, 0xa0, 0x02, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x12, 0x2c, 0x0a, 0x0b, 0x44, 0x61, 0x6d, 0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x12, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x2a, 0x0a, 0x09, 0x44, 0x61, 0x6d, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x0c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0f, 0x56,
	0x65, 0x72, 0x68, 0x6f, 0x65, 0x66, 0x66, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x12, 0x0c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a,
	0x0d, 0x56, 0x65, 0x72, 0x68, 0x6f, 0x65, 0x66, 0x66, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x0c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a,
	0x0b, 0x4c, 0x75, 0x68, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x09, 0x4c,
	0x75, 0x68, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x3b, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_checksum_proto_rawDescOnce sync.Once
	file_checksum_proto_rawDescData = file_checksum_proto_rawDesc
)

func file_checksum_proto_rawDescGZIP() []byte {
	file_checksum_proto_rawDescOnce.Do(func() {
		file_checksum_proto_rawDescData = protoimpl.X.CompressGZIP(file_checksum_proto_rawDescData)
	})
	return file_checksum_proto_rawDescData
}

var file_checksum_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_checksum_proto_goTypes = []interface{}{
	(*Request)(nil),  // 0: api.Request
	(*Response)(nil), // 1: api.Response
}
var file_checksum_proto_depIdxs = []int32{
	0, // 0: api.Checksum.DammCompute:input_type -> api.Request
	0, // 1: api.Checksum.DammCheck:input_type -> api.Request
	0, // 2: api.Checksum.VerhoeffCompute:input_type -> api.Request
	0, // 3: api.Checksum.VerhoeffCheck:input_type -> api.Request
	0, // 4: api.Checksum.LuhnCompute:input_type -> api.Request
	0, // 5: api.Checksum.LuhnCheck:input_type -> api.Request
	1, // 6: api.Checksum.DammCompute:output_type -> api.Response
	1, // 7: api.Checksum.DammCheck:output_type -> api.Response
	1, // 8: api.Checksum.VerhoeffCompute:output_type -> api.Response
	1, // 9: api.Checksum.VerhoeffCheck:output_type -> api.Response
	1, // 10: api.Checksum.LuhnCompute:output_type -> api.Response
	1, // 11: api.Checksum.LuhnCheck:output_type -> api.Response
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_checksum_proto_init() }
func file_checksum_proto_init() {
	if File_checksum_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_checksum_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checksum_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_checksum_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_checksum_proto_goTypes,
		DependencyIndexes: file_checksum_proto_depIdxs,
		MessageInfos:      file_checksum_proto_msgTypes,
	}.Build()
	File_checksum_proto = out.File
	file_checksum_proto_rawDesc = nil
	file_checksum_proto_goTypes = nil
	file_checksum_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChecksumClient is the client API for Checksum service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChecksumClient interface {
	DammCompute(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	DammCheck(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	VerhoeffCompute(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	VerhoeffCheck(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	LuhnCompute(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	LuhnCheck(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type checksumClient struct {
	cc grpc.ClientConnInterface
}

func NewChecksumClient(cc grpc.ClientConnInterface) ChecksumClient {
	return &checksumClient{cc}
}

func (c *checksumClient) DammCompute(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.Checksum/DammCompute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checksumClient) DammCheck(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.Checksum/DammCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checksumClient) VerhoeffCompute(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.Checksum/VerhoeffCompute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checksumClient) VerhoeffCheck(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.Checksum/VerhoeffCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checksumClient) LuhnCompute(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.Checksum/LuhnCompute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checksumClient) LuhnCheck(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/api.Checksum/LuhnCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChecksumServer is the server API for Checksum service.
type ChecksumServer interface {
	DammCompute(context.Context, *Request) (*Response, error)
	DammCheck(context.Context, *Request) (*Response, error)
	VerhoeffCompute(context.Context, *Request) (*Response, error)
	VerhoeffCheck(context.Context, *Request) (*Response, error)
	LuhnCompute(context.Context, *Request) (*Response, error)
	LuhnCheck(context.Context, *Request) (*Response, error)
}

// UnimplementedChecksumServer can be embedded to have forward compatible implementations.
type UnimplementedChecksumServer struct {
}

func (*UnimplementedChecksumServer) DammCompute(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DammCompute not implemented")
}
func (*UnimplementedChecksumServer) DammCheck(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DammCheck not implemented")
}
func (*UnimplementedChecksumServer) VerhoeffCompute(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerhoeffCompute not implemented")
}
func (*UnimplementedChecksumServer) VerhoeffCheck(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerhoeffCheck not implemented")
}
func (*UnimplementedChecksumServer) LuhnCompute(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LuhnCompute not implemented")
}
func (*UnimplementedChecksumServer) LuhnCheck(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LuhnCheck not implemented")
}

func RegisterChecksumServer(s *grpc.Server, srv ChecksumServer) {
	s.RegisterService(&_Checksum_serviceDesc, srv)
}

func _Checksum_DammCompute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChecksumServer).DammCompute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Checksum/DammCompute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChecksumServer).DammCompute(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Checksum_DammCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChecksumServer).DammCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Checksum/DammCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChecksumServer).DammCheck(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Checksum_VerhoeffCompute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChecksumServer).VerhoeffCompute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Checksum/VerhoeffCompute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChecksumServer).VerhoeffCompute(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Checksum_VerhoeffCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChecksumServer).VerhoeffCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Checksum/VerhoeffCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChecksumServer).VerhoeffCheck(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Checksum_LuhnCompute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChecksumServer).LuhnCompute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Checksum/LuhnCompute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChecksumServer).LuhnCompute(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Checksum_LuhnCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChecksumServer).LuhnCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Checksum/LuhnCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChecksumServer).LuhnCheck(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Checksum_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Checksum",
	HandlerType: (*ChecksumServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DammCompute",
			Handler:    _Checksum_DammCompute_Handler,
		},
		{
			MethodName: "DammCheck",
			Handler:    _Checksum_DammCheck_Handler,
		},
		{
			MethodName: "VerhoeffCompute",
			Handler:    _Checksum_VerhoeffCompute_Handler,
		},
		{
			MethodName: "VerhoeffCheck",
			Handler:    _Checksum_VerhoeffCheck_Handler,
		},
		{
			MethodName: "LuhnCompute",
			Handler:    _Checksum_LuhnCompute_Handler,
		},
		{
			MethodName: "LuhnCheck",
			Handler:    _Checksum_LuhnCheck_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "checksum.proto",
}
